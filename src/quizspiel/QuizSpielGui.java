/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizspiel;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;

/**
 *
 * @author thomas
 */
public class QuizSpielGui extends javax.swing.JFrame {

    private List<Frage> gespielteFragen = new ArrayList<>();
    private List<Frage> offeneFragen = new ArrayList<>();

    private JButton richtigeAntwortButton;

    private int sessionGespielteFragenGesamt = 0;
    private int anzahlRichtigeAntworten = 0;
    private int anzahlFalscheAntworten = 0;

    private Color defaultBackgroundColor;

    /**
     * Creates new form QuizSpielGui
     */
    public QuizSpielGui() {
        initComponents();

        weiterButton.setEnabled(false);
        beendenButton.setEnabled(false);

        defaultBackgroundColor = antwortAButton.getBackground();

        if (new File("files/GespielteFragen.ser").exists()) {
            try {
                FileInputStream fis = new FileInputStream("files/GespielteFragen.ser");
                try (ObjectInputStream ois = new ObjectInputStream(fis)) {
                    gespielteFragen = (List<Frage>) ois.readObject();
                    System.out.println(gespielteFragen.size());
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(QuizSpielGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(QuizSpielGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        for (Fragen f : Fragen.values()) {
            Frage frage = new Frage(f.getFrage(), f.getRichtigeAntwort(), f.getFalscheAntwort1(),
                    f.getFalscheAntwort2(), f.getFalscheAntwort3());
            if (!gespielteFragen.contains(frage)) {
                offeneFragen.add(frage);
            }
        }

        System.out.println(offeneFragen.size());

        if (offeneFragen.isEmpty()) {
            for (Fragen f : Fragen.values()) {
                Frage frage = new Frage(f.getFrage(), f.getRichtigeAntwort(), f.getFalscheAntwort1(),
                        f.getFalscheAntwort2(), f.getFalscheAntwort3());
                offeneFragen.add(frage);
            }
            gespielteFragen.clear();
        }

        neueFragenAnzeigen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frageNrLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        frageTextArea = new javax.swing.JTextArea();
        antwortAButton = new javax.swing.JButton();
        antwortBButton = new javax.swing.JButton();
        antwortCButton = new javax.swing.JButton();
        antwortDButton = new javax.swing.JButton();
        feedbackTextfield = new javax.swing.JTextField();
        gesamtRichtigTextfield = new javax.swing.JTextField();
        gesamtFalschTextfield = new javax.swing.JTextField();
        weiterButton = new javax.swing.JButton();
        beendenButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Quiz-Spiel");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        frageNrLabel.setText("Frage 1:");

        frageTextArea.setColumns(20);
        frageTextArea.setRows(5);
        jScrollPane1.setViewportView(frageTextArea);

        antwortAButton.setText("Antwort A");
        antwortAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antwortAButtonActionPerformed(evt);
            }
        });

        antwortBButton.setText("Antwort B");
        antwortBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antwortBButtonActionPerformed(evt);
            }
        });

        antwortCButton.setText("Antwort C");
        antwortCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antwortCButtonActionPerformed(evt);
            }
        });

        antwortDButton.setText("Antwort D");
        antwortDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antwortDButtonActionPerformed(evt);
            }
        });

        feedbackTextfield.setEditable(false);
        feedbackTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        feedbackTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackTextfieldActionPerformed(evt);
            }
        });

        gesamtRichtigTextfield.setEditable(false);
        gesamtRichtigTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gesamtRichtigTextfield.setText("Richtig: 0 von 0");
        gesamtRichtigTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gesamtRichtigTextfieldActionPerformed(evt);
            }
        });

        gesamtFalschTextfield.setEditable(false);
        gesamtFalschTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gesamtFalschTextfield.setText("Falsch: 0 von 0");
        gesamtFalschTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gesamtFalschTextfieldActionPerformed(evt);
            }
        });

        weiterButton.setText("Weiter");
        weiterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weiterButtonActionPerformed(evt);
            }
        });

        beendenButton.setText("Beenden");
        beendenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beendenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(frageNrLabel)
                        .addGap(728, 728, 728))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feedbackTextfield)
                            .addComponent(jScrollPane1)
                            .addComponent(antwortAButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(antwortBButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(antwortCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(antwortDButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(gesamtRichtigTextfield)
                            .addComponent(gesamtFalschTextfield))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(weiterButton)
                .addGap(18, 18, 18)
                .addComponent(beendenButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frageNrLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(antwortAButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(antwortBButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(antwortCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(antwortDButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(feedbackTextfield)
                .addGap(18, 18, 18)
                .addComponent(gesamtRichtigTextfield)
                .addGap(18, 18, 18)
                .addComponent(gesamtFalschTextfield)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weiterButton)
                    .addComponent(beendenButton))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void antwortAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antwortAButtonActionPerformed
        doAntwortRoutine(antwortAButton);
    }//GEN-LAST:event_antwortAButtonActionPerformed

    private void antwortBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antwortBButtonActionPerformed
        doAntwortRoutine(antwortBButton);
    }//GEN-LAST:event_antwortBButtonActionPerformed

    private void antwortCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antwortCButtonActionPerformed
        doAntwortRoutine(antwortCButton);
    }//GEN-LAST:event_antwortCButtonActionPerformed

    private void antwortDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antwortDButtonActionPerformed
        doAntwortRoutine(antwortDButton);
    }//GEN-LAST:event_antwortDButtonActionPerformed

    private void feedbackTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feedbackTextfieldActionPerformed

    private void gesamtRichtigTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gesamtRichtigTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gesamtRichtigTextfieldActionPerformed

    private void gesamtFalschTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gesamtFalschTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gesamtFalschTextfieldActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void weiterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weiterButtonActionPerformed
        if (offeneFragen.size() > 0) {
            frageNrLabel.setText("Frage " + (sessionGespielteFragenGesamt + 1) + ":");
            neueFragenAnzeigen();
            beendenButton.setEnabled(false);
            resetAntwortButtons();
        }
        weiterButton.setEnabled(false);
    }//GEN-LAST:event_weiterButtonActionPerformed

    private void beendenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beendenButtonActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("files/GespielteFragen.ser");
            try (ObjectOutputStream oos = new ObjectOutputStream(fos)) {
                oos.writeObject(gespielteFragen);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(QuizSpielGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(QuizSpielGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("geschlossen");
        setVisible(false);
        dispose();
    }//GEN-LAST:event_beendenButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizSpielGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizSpielGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizSpielGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizSpielGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuizSpielGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton antwortAButton;
    private javax.swing.JButton antwortBButton;
    private javax.swing.JButton antwortCButton;
    private javax.swing.JButton antwortDButton;
    private javax.swing.JButton beendenButton;
    private javax.swing.JTextField feedbackTextfield;
    private javax.swing.JLabel frageNrLabel;
    private javax.swing.JTextArea frageTextArea;
    private javax.swing.JTextField gesamtFalschTextfield;
    private javax.swing.JTextField gesamtRichtigTextfield;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton weiterButton;
    // End of variables declaration//GEN-END:variables

    private void neueFragenAnzeigen() {
        Frage frage = offeneFragen.get(new Random().nextInt(offeneFragen.size()));
        frageTextArea.setText(frage.getFrage());
        int randomNum = ThreadLocalRandom.current().nextInt(1, 5);
        switch (randomNum) {
            case 1:
                richtigeAntwortButton = antwortAButton;
                antwortAButton.setText(frage.getRichtigeAntwort());
                antwortBButton.setText(frage.getFalscheAntwort1());
                antwortCButton.setText(frage.getFalscheAntwort2());
                antwortDButton.setText(frage.getFalscheAntwort3());
                break;
            case 2:
                richtigeAntwortButton = antwortBButton;
                antwortAButton.setText(frage.getFalscheAntwort1());
                antwortBButton.setText(frage.getRichtigeAntwort());
                antwortCButton.setText(frage.getFalscheAntwort2());
                antwortDButton.setText(frage.getFalscheAntwort3());
                break;
            case 3:
                richtigeAntwortButton = antwortCButton;
                antwortAButton.setText(frage.getFalscheAntwort1());
                antwortBButton.setText(frage.getFalscheAntwort2());
                antwortCButton.setText(frage.getRichtigeAntwort());
                antwortDButton.setText(frage.getFalscheAntwort3());
                break;
            case 4:
                richtigeAntwortButton = antwortDButton;
                antwortAButton.setText(frage.getFalscheAntwort1());
                antwortBButton.setText(frage.getFalscheAntwort2());
                antwortCButton.setText(frage.getFalscheAntwort3());
                antwortDButton.setText(frage.getRichtigeAntwort());
                break;
            default:
                break;
        }
        feedbackTextfield.setText("");
        offeneFragen.remove(frage);
        gespielteFragen.add(frage);
    }

    private void disableAntwortButtons() {
        antwortAButton.setEnabled(false);
        antwortBButton.setEnabled(false);
        antwortCButton.setEnabled(false);
        antwortDButton.setEnabled(false);
    }

    private void resetAntwortButtons() {
        antwortAButton.setBackground(defaultBackgroundColor);
        antwortBButton.setBackground(defaultBackgroundColor);
        antwortCButton.setBackground(defaultBackgroundColor);
        antwortDButton.setBackground(defaultBackgroundColor);
    }

    private void doAntwortRoutine(JButton clickedButton) {
//        disableAntwortButtons();
        if (!weiterButton.isEnabled()) {
            sessionGespielteFragenGesamt++;
            richtigeAntwortButton.setBackground(Color.GREEN);
            if (clickedButton == richtigeAntwortButton) {
                feedbackTextfield.setText("Antwort richtig");
                anzahlRichtigeAntworten++;
            } else {
                clickedButton.setBackground(Color.RED);
                feedbackTextfield.setText("Antwort falsch");
                anzahlFalscheAntworten++;
            }
            gesamtRichtigTextfield.setText("Richtig: " + anzahlRichtigeAntworten + " von " + sessionGespielteFragenGesamt);
            gesamtFalschTextfield.setText("Falsch: " + anzahlFalscheAntworten + " von " + sessionGespielteFragenGesamt);
            weiterButton.setEnabled(true);
            beendenButton.setEnabled(true);
        }

    }
}
